diff --git a/node_modules/@railgun-community/engine/dist/contracts/railgun-smart-wallet/railgun-smart-wallet.js b/node_modules/@railgun-community/engine/dist/contracts/railgun-smart-wallet/railgun-smart-wallet.js
index 7e1da90..d6437a7 100644
--- a/node_modules/@railgun-community/engine/dist/contracts/railgun-smart-wallet/railgun-smart-wallet.js
+++ b/node_modules/@railgun-community/engine/dist/contracts/railgun-smart-wallet/railgun-smart-wallet.js
@@ -253,6 +253,10 @@ class RailgunSmartWalletContract extends events_1.default {
     async getHistoricalEvents(chain, initialStartBlock, latestBlock, getNextStartBlockFromValidMerkletree, eventsListener, eventsNullifierListener, eventsUnshieldListener, setLastSyncedBlock) {
         const engineV3StartBlockNumber = RailgunSmartWalletContract.getEngineV2StartBlockNumber(chain);
         const engineV3ShieldEventUpdate030923BlockNumber = RailgunSmartWalletContract.getEngineV2ShieldEventUpdate030923BlockNumber(chain);
+
+        // Cookbook does not need event scanning.
+        return;
+
         // TODO: Possible data integrity issue in using commitment block numbers.
         // Unshields and Nullifiers are scanned from the latest commitment block.
         // Unshields/Nullifiers are not validated using the same merkleroot validation.
